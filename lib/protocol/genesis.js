// Autogenerated, do not edit.

'use strict';

const data = require('./genesis-data.json');
const genesis = exports;

/*
 * Main
 */

genesis.main = {
  version: 0,
  hash: Buffer.from(
    '96ad481d09f4f90b7ad2ff32b097f033a9861392c526a81529d059e8d5c94fc1',
    'hex'),
  prevBlock: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  merkleRoot: Buffer.from(
    '8e4c9756fef2ad10375f360e0560fcc7587eb5223ddf8cd7c7e06e60a1140b15',
    'hex'),
  witnessRoot: Buffer.from(
    'a11f93892d91d30a29539ed04638867b21b3cc3ccf09d49090683519d2848e26',
    'hex'),
  treeRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  reservedRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  time: 1580305822,
  bits: 0x1c00ffff,
  nonce: 0x00000000,
  extraNonce: Buffer.from(
    '000000000000000000000000000000000000000000000000',
    'hex'),
  mask: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  height: 0,
  magic: 2527938589
};

genesis.mainData = Buffer.from(data.main, 'base64');

/*
 * Testnet
 */

genesis.testnet = {
  version: 0,
  hash: Buffer.from(
    'fd55e49773388846ccf099d31f082883de002467ba8b1d2c9b7d58c70e0dc63f',
    'hex'),
  prevBlock: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  merkleRoot: Buffer.from(
    '8e4c9756fef2ad10375f360e0560fcc7587eb5223ddf8cd7c7e06e60a1140b15',
    'hex'),
  witnessRoot: Buffer.from(
    'a11f93892d91d30a29539ed04638867b21b3cc3ccf09d49090683519d2848e26',
    'hex'),
  treeRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  reservedRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  time: 1580305823,
  bits: 0x1d00ffff,
  nonce: 0x00000000,
  extraNonce: Buffer.from(
    '000000000000000000000000000000000000000000000000',
    'hex'),
  mask: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  height: 0,
  magic: 4250264727
};

genesis.testnetData = Buffer.from(data.testnet, 'base64');

/*
 * Regtest
 */

genesis.regtest = {
  version: 0,
  hash: Buffer.from(
    'b423c0e47c55142cc94b7fb0ce04d9571dca89b013a47587f1effe73779564be',
    'hex'),
  prevBlock: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  merkleRoot: Buffer.from(
    '8e4c9756fef2ad10375f360e0560fcc7587eb5223ddf8cd7c7e06e60a1140b15',
    'hex'),
  witnessRoot: Buffer.from(
    'a11f93892d91d30a29539ed04638867b21b3cc3ccf09d49090683519d2848e26',
    'hex'),
  treeRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  reservedRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  time: 1580305824,
  bits: 0x207fffff,
  nonce: 0x00000000,
  extraNonce: Buffer.from(
    '000000000000000000000000000000000000000000000000',
    'hex'),
  mask: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  height: 0,
  magic: 3022242020
};

genesis.regtestData = Buffer.from(data.regtest, 'base64');

/*
 * Simnet
 */

genesis.simnet = {
  version: 0,
  hash: Buffer.from(
    '47a7e009ccbc68cbec930356d25eec66595b504b7faac1a8b48e85078a5b48a1',
    'hex'),
  prevBlock: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  merkleRoot: Buffer.from(
    '8e4c9756fef2ad10375f360e0560fcc7587eb5223ddf8cd7c7e06e60a1140b15',
    'hex'),
  witnessRoot: Buffer.from(
    'a11f93892d91d30a29539ed04638867b21b3cc3ccf09d49090683519d2848e26',
    'hex'),
  treeRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  reservedRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  time: 1580305825,
  bits: 0x207fffff,
  nonce: 0x00000000,
  extraNonce: Buffer.from(
    '000000000000000000000000000000000000000000000000',
    'hex'),
  mask: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  height: 0,
  magic: 1202184201
};

genesis.simnetData = Buffer.from(data.simnet, 'base64');
