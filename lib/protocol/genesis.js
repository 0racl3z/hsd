// Autogenerated, do not edit.

'use strict';

const data = require('./genesis-data.json');
const genesis = exports;

/*
 * Main
 */

genesis.main = {
  version: 0,
  hash: '6e1a1e51deb85c7e1e23be1c991864496688674add7ea0e33a05885b2772f72b',
  prevBlock: '0000000000000000000000000000000000000000000000000000000000000000',
  merkleRoot:
    '02491a35a4119490ad969b2c27282ff25119e15ebca160a88dc1769b6a9b55cc',
  witnessRoot:
    'c50f02aaf39674f9d70ddc05cf1086671f56471b648b5bc5413c6f828babacaa',
  trieRoot:
    '03170a2e7597b7b7e3d84c05391d139a62b157e78786d8c082f29dcf4c111314',
  time: 1514765688,
  bits: 0x1f07ffff,
  nonce: Buffer.from('0000000000000000000000000000000000000000', 'hex'),
  solution: new Uint32Array([
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000
  ]),
  height: 0
};

genesis.mainData = Buffer.from(data.main, 'base64');

/*
 * Testnet
 */

genesis.testnet = {
  version: 0,
  hash: 'b2c97f86e8e54eac895db7e8cacfe01c8893248804bbc5292f1aa0d49a8aff2e',
  prevBlock: '0000000000000000000000000000000000000000000000000000000000000000',
  merkleRoot:
    '6d109d35a8fd7e1d77350c9435df8c4f976663abf5a73c6205a66b6a83e2606d',
  witnessRoot:
    '4735913125d8cbcb9ecfd4207702e95b2e853c3fe29a217bdf019e36aba655f2',
  trieRoot:
    '03170a2e7597b7b7e3d84c05391d139a62b157e78786d8c082f29dcf4c111314',
  time: 1514765689,
  bits: 0x2007ffff,
  nonce: Buffer.from('0000000000000000000000000000000000000000', 'hex'),
  solution: new Uint32Array([
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000
  ]),
  height: 0
};

genesis.testnetData = Buffer.from(data.testnet, 'base64');

/*
 * Regtest
 */

genesis.regtest = {
  version: 0,
  hash: 'bff4e5cf96fbda407430095a509ddd9cd1b9fca2d3e017b67c09587b0c4e3f87',
  prevBlock: '0000000000000000000000000000000000000000000000000000000000000000',
  merkleRoot:
    'f486f396f9fa06520b0112bb49543394d87b8c4887682b2e78aa80b5c4e8ac90',
  witnessRoot:
    'c56d8ee8258b9fa11fc02d16524294dcd575357563091da3cfe9176ba3bb1d43',
  trieRoot:
    '03170a2e7597b7b7e3d84c05391d139a62b157e78786d8c082f29dcf4c111314',
  time: 1514765690,
  bits: 0x207fffff,
  nonce: Buffer.from('0000000000000000000000000000000000000000', 'hex'),
  solution: new Uint32Array([
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000
  ]),
  height: 0
};

genesis.regtestData = Buffer.from(data.regtest, 'base64');

/*
 * Simnet
 */

genesis.simnet = {
  version: 0,
  hash: 'f8751818985e49dcb24343f0b502a1aa9ba1b4c19dda392ed10a59a2883f2441',
  prevBlock: '0000000000000000000000000000000000000000000000000000000000000000',
  merkleRoot:
    '246c785fad2452bcca0d1b5d201cdafe9f9c6c940df5c7404279d2b67c31e56a',
  witnessRoot:
    '8c5d4b1e06e9c490ab52e9c641e93300defca60d8a22d176203dfaf19ab74bc0',
  trieRoot:
    '03170a2e7597b7b7e3d84c05391d139a62b157e78786d8c082f29dcf4c111314',
  time: 1514765691,
  bits: 0x207fffff,
  nonce: Buffer.from('0000000000000000000000000000000000000000', 'hex'),
  solution: new Uint32Array([
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000
  ]),
  height: 0
};

genesis.simnetData = Buffer.from(data.simnet, 'base64');
