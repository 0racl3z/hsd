// Autogenerated, do not edit.

'use strict';

const data = require('./genesis-data.json');
const genesis = exports;

/*
 * Main
 */

genesis.main = {
  version: 0,
  hash: '72acfcff1677890374882a6af6ce580f9afabfec041cd0b6c44bf4ba7f4efca3',
  prevBlock: '0000000000000000000000000000000000000000000000000000000000000000',
  merkleRoot:
    '7c22185a606e7080eb01cad0be65bdd5362f073cd5583ac996f49f4af796c077',
  witnessRoot:
    'e1f142b9966fe53898c21d3f20fbae0dfb6f7b986fa97d0b3c81f1cf291c5e9a',
  trieRoot:
    '03170a2e7597b7b7e3d84c05391d139a62b157e78786d8c082f29dcf4c111314',
  time: 1514765688,
  bits: 0x1f07ffff,
  nonce: Buffer.from('0000000000000000000000000000000000000000', 'hex'),
  solution: new Uint32Array([
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000
  ]),
  height: 0
};

genesis.mainData = Buffer.from(data.main, 'base64');

/*
 * Testnet
 */

genesis.testnet = {
  version: 0,
  hash: 'f65fb143ac8eed6f41ce632bf110f200985215cde66d786b92b88a69148ccd5b',
  prevBlock: '0000000000000000000000000000000000000000000000000000000000000000',
  merkleRoot:
    '7c22185a606e7080eb01cad0be65bdd5362f073cd5583ac996f49f4af796c077',
  witnessRoot:
    'e1f142b9966fe53898c21d3f20fbae0dfb6f7b986fa97d0b3c81f1cf291c5e9a',
  trieRoot:
    '03170a2e7597b7b7e3d84c05391d139a62b157e78786d8c082f29dcf4c111314',
  time: 1514765689,
  bits: 0x2007ffff,
  nonce: Buffer.from('0000000000000000000000000000000000000000', 'hex'),
  solution: new Uint32Array([
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000
  ]),
  height: 0
};

genesis.testnetData = Buffer.from(data.testnet, 'base64');

/*
 * Regtest
 */

genesis.regtest = {
  version: 0,
  hash: '0a411b28da00f44b946f672edbc625131533b8fd0db4ac36983db2d0eca62465',
  prevBlock: '0000000000000000000000000000000000000000000000000000000000000000',
  merkleRoot:
    '7c22185a606e7080eb01cad0be65bdd5362f073cd5583ac996f49f4af796c077',
  witnessRoot:
    'e1f142b9966fe53898c21d3f20fbae0dfb6f7b986fa97d0b3c81f1cf291c5e9a',
  trieRoot:
    '03170a2e7597b7b7e3d84c05391d139a62b157e78786d8c082f29dcf4c111314',
  time: 1514765690,
  bits: 0x207fffff,
  nonce: Buffer.from('0000000000000000000000000000000000000000', 'hex'),
  solution: new Uint32Array([
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000
  ]),
  height: 0
};

genesis.regtestData = Buffer.from(data.regtest, 'base64');

/*
 * Simnet
 */

genesis.simnet = {
  version: 0,
  hash: '5cfbc8c194f7b77de225410a0f4128347b85ea3b165f7d419b3ccc163583d03b',
  prevBlock: '0000000000000000000000000000000000000000000000000000000000000000',
  merkleRoot:
    '7c22185a606e7080eb01cad0be65bdd5362f073cd5583ac996f49f4af796c077',
  witnessRoot:
    'e1f142b9966fe53898c21d3f20fbae0dfb6f7b986fa97d0b3c81f1cf291c5e9a',
  trieRoot:
    '03170a2e7597b7b7e3d84c05391d139a62b157e78786d8c082f29dcf4c111314',
  time: 1514765691,
  bits: 0x207fffff,
  nonce: Buffer.from('0000000000000000000000000000000000000000', 'hex'),
  solution: new Uint32Array([
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000,
    0x00000000
  ]),
  height: 0
};

genesis.simnetData = Buffer.from(data.simnet, 'base64');
